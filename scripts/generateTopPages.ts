const fs = require("fs");
const csv = require("csv-parser");

// Define the structure of a page record
interface PageRecord {
  page: string;
  visits: number;
}

// Define the structure of our final result object
interface TopPages {
  [key: string]: PageRecord[];
}

// Path to the CSV file
const fileName = process.argv[2];
if (!fileName) {
  console.error("Error: No file name provided.");
  process.exit(1); // Exit if no file name is provided
}
const csvFilePath = `../top-pages/${fileName}`;

// Categories to extract top pages for
const categories: string[] = [
  "item",
  "subclass",
  "background",
  "species",
  "class",
  "spells",
  "subspecies",
];

// Initialize an object to store top pages for each category
let topPages: TopPages = {};

// Initialize empty arrays for each category in `topPages`
categories.forEach((category) => {
  topPages[category] = [];
});

// Function to compare visits for sorting
function compareVisits(a: PageRecord, b: PageRecord): number {
  return b.visits - a.visits;
}

// Read and process the CSV file
fs.createReadStream(csvFilePath)
  .pipe(csv())
  .on("data", (row: { Page: string; Visitors: string; Total: string }) => {
    const page = row.Page;
    const visits = parseInt(row.Total, 10);

    if (page.split("/").length != 3) {
      return;
    }
    if (
      page.includes("spell-list") ||
      page.includes("feats") ||
      page.includes("character") ||
      page.includes("dashboard")
    ) {
      return;
    }

    const category = page.split("/")[1];
    if (categories.includes(category)) {
      topPages[category].push({ page, visits });
    }
  })
  .on("end", () => {
    // Sort the top pages for each category
    for (const category of categories) {
      topPages[category].sort(compareVisits);
    }

    // Generate the TypeScript code
    let code = "// Path: scripts/generateTopPages.ts\n";
    code +=
      "// This file was generated by a script. Do not edit this file directly.\n\n";
    code += "export const topPages = ";
    code += JSON.stringify(topPages, null, 2);
    code += ";\n";

    // Write the TypeScript code to a file
    fs.writeFileSync("../src/app/topPages.ts", code);
  });
